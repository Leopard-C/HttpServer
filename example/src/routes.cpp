// Generated by script route_collector.py
#include <server/router.h>
#include "controller/server/server_controller.h"
#include "controller/test/test_controller.h"
#include "controller/user/user_controller.h"
#include "controller/web/web_controller.h"

bool register_routes(std::shared_ptr<ic::server::Router> router) {
    using namespace ic::server;
    bool ret = true;

    // controller/server/server_controller.h
    ret &= router->AddStaticRoute("/api/Server/DumpThreadInfos", HttpMethod::kPOST, controller::ServerController::DumpThreadInfos, "获取所有线程信息.", {{"Authorization", "1"}, {"AdminOnly", "1"}});
    ret &= router->AddStaticRoute("/api/Server/Shutdown", HttpMethod::kPOST, controller::ServerController::Shutdown, "关闭服务器.", {{"Authorization", "1"}, {"AdminOnly", "1"}});

    // controller/test/test_controller.h
    ret &= router->AddStaticRoute("/api/Test/TestEmpty", HttpMethod::kGET, controller::TestController::TestEmpty, "空请求，用于压力测试.", {{"Authorization", "0"}});
    ret &= router->AddStaticRoute("/api/Test/TestMacro_CHECK_BODY_PARAM", HttpMethod::kPOST, controller::TestController::TestMacro_CHECK_BODY_PARAM, "测试宏-CHECK_BODY_PARAM_xxx.", {});
    ret &= router->AddStaticRoute("/api/Test/TestMacro_CHECK_BODY_PARAM_EX", HttpMethod::kPOST, controller::TestController::TestMacro_CHECK_BODY_PARAM_EX, "测试宏-CHECK_BODY_PARAM_xxx_EX.", {});
    ret &= router->AddStaticRoute("/api/Test/TestMacro_CHECK_JSON_PARAM", HttpMethod::kPOST, controller::TestController::TestMacro_CHECK_JSON_PARAM, "测试宏-CHECK_JSON_PARAM_xxx.", {});
    ret &= router->AddStaticRoute("/api/Test/TestMacro_CHECK_JSON_PARAM_ARRAY", HttpMethod::kPOST, controller::TestController::TestMacro_CHECK_JSON_PARAM_ARRAY, "测试宏-CHECK_JSON_PARAM_xxx_ARRAY.", {});
    ret &= router->AddStaticRoute("/api/Test/TestMacro_CHECK_URL_PARAM", HttpMethod::kGET, controller::TestController::TestMacro_CHECK_URL_PARAM, "测试宏-CHECK_URL_PARAM_xxx.", {});
    ret &= router->AddStaticRoute("/api/Test/TestMacro_GET_BODY_PARAM", HttpMethod::kPOST, controller::TestController::TestMacro_GET_BODY_PARAM, "测试宏-GET_BODY_PARAM_xxx.", {});
    ret &= router->AddStaticRoute("/api/Test/TestMacro_GET_BODY_PARAM_EX", HttpMethod::kPOST, controller::TestController::TestMacro_GET_BODY_PARAM_EX, "测试宏-GET_BODY_PARAM_xxx_EX.", {});
    ret &= router->AddStaticRoute("/api/Test/TestMacro_GET_JSON_PARAM", HttpMethod::kPOST, controller::TestController::TestMacro_GET_JSON_PARAM, "测试宏-GET_JSON_PARAM_xxx.", {});
    ret &= router->AddStaticRoute("/api/Test/TestMacro_GET_JSON_PARAM_ARRAY", HttpMethod::kPOST, controller::TestController::TestMacro_GET_JSON_PARAM_ARRAY, "测试宏-GET_JSON_PARAM_xxx_ARRAY.", {});
    ret &= router->AddStaticRoute("/api/Test/TestMacro_GET_URL_PARAM", HttpMethod::kGET, controller::TestController::TestMacro_GET_URL_PARAM, "测试宏-GET_URL_PARAM_xxx.", {});

    // controller/user/user_controller.h
    ret &= router->AddStaticRoute("/api/User/GetInfo", HttpMethod::kGET | HttpMethod::kPOST, controller::UserController::GetInfo, "获取用户信息.", {{"Authorization", "1"}});
    ret &= router->AddStaticRoute("/api/User/Login", HttpMethod::kPOST, controller::UserController::Login, "登录.", {{"Authorization", "0"}});
    ret &= router->AddStaticRoute("/api/User/UpdateInfo", HttpMethod::kPOST, controller::UserController::UpdateInfo, "更新用户信息.", {{"Authorization", "1"}});
    ret &= router->AddStaticRoute("/api/User/UploadAvatar", HttpMethod::kPOST, controller::UserController::UploadAvatar, "上传用户头像.", {{"Authorization", "1"}});
    ret &= router->AddRegexRoute("/api/User/avatar/([a-z0-9]{2})/([a-z0-9]{32}\\.(jpg|jpeg|png|gif))", HttpMethod::kGET, controller::UserController::GetAvatarImage, "获取头像，返回二进制图片文件.", {{"Authorization", "1"}});

    // controller/web/web_controller.h
    ret &= router->AddStaticRoute("/", HttpMethod::kGET, controller::WebController::Index, "访问根目录，跳转/web/index.html.", {});
    ret &= router->AddStaticRoute("/index", HttpMethod::kGET, controller::WebController::Index, "访问根目录，跳转/web/index.html.", {});
    ret &= router->AddStaticRoute("/index.html", HttpMethod::kGET, controller::WebController::Index, "访问根目录，跳转/web/index.html.", {});
    ret &= router->AddStaticRoute("/favicon.ico", HttpMethod::kGET, controller::WebController::Favicon, "网站图标.", {});
    ret &= router->AddRegexRoute("/web/(.+)", HttpMethod::kGET, controller::WebController::GetResource, "网页资源文件(html/js/css/img).", {});

    return ret;
}
